{"ast":null,"code":"var _jsxFileName = \"/Users/ipseekamalla/Documents/Ipseeka Malla/Coding/Full stack Road/Phase 3/MERN Stack/todoapp/frontend/src/context/Tasks/TaskState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskContext from \"./TaskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:8848\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  //Get all the tasks\n  const getTasks = async () => {\n    //API Call\n    const response = await fetch(`${host}/api/tasks/displaytasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    // Save the task in setTask\n    const json = await response.json();\n    setTasks(json);\n  };\n\n  //Add a task\n  const addTask = async (taskName, status) => {\n    //API Call\n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        taskName,\n        status\n      })\n    });\n    const task = await response.json();\n    console.log(task);\n    //Add the new task by concatinating\n    setTasks(tasks.concat(task));\n  };\n\n  //Delete a task\n  const deleteTask = async id => {\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = response.json();\n    console.log(json);\n\n    //Remove the task by using it's id usind filter fucntion\n    const newTasks = tasks.filter(task => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n  //Edit a note\n  const editTask = async (id, taskName, status) => {\n    //API CALL\n    const response = await fetch(`${host}/api/tasks/edittask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        taskName,\n        status\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n    //Logic to edit the client\n    for (let index = 0; index < tasks.length; index++) {\n      const element = newTasks[index];\n\n      // If the id that is fetched id equal to the id on loop then replace it\n      if (element._id === id) {\n        newTasks[index].taskName = taskName;\n        newTasks[index].status = status;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      getTasks,\n      addTask,\n      deleteTask,\n      editTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskState, \"UhKdAoJZyQh7T+OrXFy8BVoRYQA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["React","useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","tasksInitial","tasks","setTasks","getTasks","response","fetch","method","headers","localStorage","getItem","json","addTask","taskName","status","body","JSON","stringify","task","console","log","concat","deleteTask","id","newTasks","filter","_id","editTask","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ipseekamalla/Documents/Ipseeka Malla/Coding/Full stack Road/Phase 3/MERN Stack/todoapp/frontend/src/context/Tasks/TaskState.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport TaskContext from \"./TaskContext\";\n\n\nconst TaskState = (props) => {\n  const host = \"http://localhost:8848\";\n  const tasksInitial = [];\n  const [tasks, setTasks] = useState(tasksInitial);\n\n  //Get all the tasks\n  const getTasks = async () => {\n\n    //API Call\n    const response = await fetch(`${host}/api/tasks/displaytasks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n    });\n    // Save the task in setTask\n    const json = await response.json();\n    setTasks(json);\n  };\n\n\n  //Add a task\n  const addTask = async (taskName,status) => {\n    //API Call\n    const response = await fetch(`${host}/api/tasks/addtask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({ taskName,status }),\n    });\n    const task = await response.json();\n    console.log(task)\n    //Add the new task by concatinating\n    setTasks(tasks.concat(task));\n  };\n\n\n\n  //Delete a task\n  const deleteTask = async (id) => {\n    const response = await fetch(`${host}/api/tasks/deletetask/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n\n      },\n    });\n    const json = response.json();\n    console.log(json);\n\n     //Remove the task by using it's id usind filter fucntion\n    const newTasks = tasks.filter((task) => {\n      return task._id !== id;\n    });\n    setTasks(newTasks);\n  };\n\n\n   //Edit a note\n   const editTask = async (id, taskName,status) => {\n    //API CALL\n    const response = await fetch(`${host}/api/tasks/edittask/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n\n      body: JSON.stringify({ taskName,status }),\n    });\n    const json = response.json();\n    console.log(json);\n\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n    //Logic to edit the client\n    for (let index = 0; index < tasks.length; index++) {\n      const element = newTasks[index];\n\n      // If the id that is fetched id equal to the id on loop then replace it\n      if (element._id === id) {\n        newTasks[index].taskName = taskName;\n        newTasks[index].status = status;\n        break;\n      }\n    }\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskContext.Provider value={{tasks, getTasks, addTask,deleteTask,editTask}}>{props.children}</TaskContext.Provider>\n  );\n};\n\nexport default TaskState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}